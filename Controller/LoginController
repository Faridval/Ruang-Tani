package Controller;

import Model.Session;
import dao.UserDAO;
import dao.UserDAOImpl;
import java.io.IOException;
import java.net.URL;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import model.User;

import java.sql.Connection;
import java.util.ResourceBundle;
import javafx.event.ActionEvent;
import javafx.fxml.Initializable;
import javafx.scene.control.Hyperlink;

public class LoginController implements Initializable {

    @FXML
    private TextField login_username;

    @FXML
    private PasswordField login_password;

    @FXML
    private Button login_button;
    
    @FXML
    private Hyperlink login_hyperlink;

    
    @Override
    public void initialize(URL url, ResourceBundle rb) {
        // Inisialisasi jika diperlukan
    }

    // Method untuk menangani login
    @FXML
    private void handleLogin(ActionEvent event) {
        String username = login_username.getText();
        String password = login_password.getText();

        if (username.isEmpty() || password.isEmpty()) {
            showAlert("Semua field harus diisi!");
            return;
        }

        try {
            Connection connection = dao.BaseDAO.getConnection();
            if (connection == null) {
                showAlert("Koneksi ke database gagal!");
                return;
            }

            UserDAO userDAO = new UserDAOImpl(connection);
            User user = userDAO.login(username, password);

            if (user != null) {
                Session.setUserId(user.getId()); // Simpan ID pengguna ke Session
                Session.setRole(user.getRole()); // Simpan role pengguna ke Session
                int currentUserId = user.getId(); // pastikan user memiliki metode getId()
                System.out.println("Debug: User ID from login: " + currentUserId);
                
                String role = user.getRole();
                System.out.println("Role pengguna: " + role);
                

                if (role.equalsIgnoreCase("Pemilik")) {
                    navigateToDashboard("/View/DahsboardPemilikLahan.fxml", "Dahsboard Pemilik Lahan");
                } else if (role.equalsIgnoreCase("Pekerja")) {
                    navigateToDashboard("/View/HomePekerja.fxml", "Dashboard Pekerja");
                } else {
                    showAlert("Role tidak dikenali!");
                }
            } else {
                showAlert("Username atau Password salah!");
            }

        } catch (Exception e) {
            e.printStackTrace();
            showAlert("Terjadi kesalahan saat login. Silakan coba lagi.");
        }
    }


    // Method untuk berpindah ke dashboard
    private void navigateToDashboard(String fxmlPath, String title) {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource(fxmlPath));
            Stage stage = (Stage) login_button.getScene().getWindow(); // Ambil stage saat ini
            stage.setScene(new Scene(loader.load()));
            stage.setTitle(title);
            stage.show();
        } catch (Exception e) {
            e.printStackTrace(); // Cetak stack trace untuk debugging
            showAlert("Terjadi kesalahan saat membuka dashboard.");
        }
    }
    
    @FXML
    private void goToSignup() {
        try {
            // Muat file FXML untuk Login
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/View/Signup.fxml"));
            Stage stage = (Stage) login_hyperlink.getScene().getWindow();
            stage.setScene(new Scene(loader.load()));
            stage.setTitle("Signup");
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    // Method untuk menampilkan alert
    private void showAlert(String message) {
        Alert alert = new Alert(AlertType.INFORMATION);
        alert.setContentText(message);
        alert.showAndWait();
    }
}
